// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grSim_Packet.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "grSim_Packet.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class grSim_PacketDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<grSim_Packet> {
} _grSim_Packet_default_instance_;

namespace protobuf_grSim_5fPacket_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(grSim_Packet, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(grSim_Packet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(grSim_Packet, commands_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(grSim_Packet, replacement_),
  0,
  1,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 7, sizeof(grSim_Packet)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_grSim_Packet_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "grSim_Packet.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

}  // namespace

void TableStruct::Shutdown() {
  _grSim_Packet_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::protobuf_grSim_5fCommands_2eproto::InitDefaults();
  ::protobuf_grSim_5fReplacement_2eproto::InitDefaults();
  _grSim_Packet_default_instance_.DefaultConstruct();
  _grSim_Packet_default_instance_.get_mutable()->commands_ = const_cast< ::grSim_Commands*>(
      ::grSim_Commands::internal_default_instance());
  _grSim_Packet_default_instance_.get_mutable()->replacement_ = const_cast< ::grSim_Replacement*>(
      ::grSim_Replacement::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\022grSim_Packet.proto\032\024grSim_Commands.pro"
      "to\032\027grSim_Replacement.proto\"Z\n\014grSim_Pac"
      "ket\022!\n\010commands\030\001 \001(\0132\017.grSim_Commands\022\'"
      "\n\013replacement\030\002 \001(\0132\022.grSim_Replacement"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 159);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "grSim_Packet.proto", &protobuf_RegisterTypes);
  ::protobuf_grSim_5fCommands_2eproto::AddDescriptors();
  ::protobuf_grSim_5fReplacement_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_grSim_5fPacket_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int grSim_Packet::kCommandsFieldNumber;
const int grSim_Packet::kReplacementFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

grSim_Packet::grSim_Packet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_grSim_5fPacket_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:grSim_Packet)
}
grSim_Packet::grSim_Packet(const grSim_Packet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_commands()) {
    commands_ = new ::grSim_Commands(*from.commands_);
  } else {
    commands_ = NULL;
  }
  if (from.has_replacement()) {
    replacement_ = new ::grSim_Replacement(*from.replacement_);
  } else {
    replacement_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:grSim_Packet)
}

void grSim_Packet::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&commands_, 0, reinterpret_cast<char*>(&replacement_) -
    reinterpret_cast<char*>(&commands_) + sizeof(replacement_));
}

grSim_Packet::~grSim_Packet() {
  // @@protoc_insertion_point(destructor:grSim_Packet)
  SharedDtor();
}

void grSim_Packet::SharedDtor() {
  if (this != internal_default_instance()) {
    delete commands_;
  }
  if (this != internal_default_instance()) {
    delete replacement_;
  }
}

void grSim_Packet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* grSim_Packet::descriptor() {
  protobuf_grSim_5fPacket_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_grSim_5fPacket_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const grSim_Packet& grSim_Packet::default_instance() {
  protobuf_grSim_5fPacket_2eproto::InitDefaults();
  return *internal_default_instance();
}

grSim_Packet* grSim_Packet::New(::google::protobuf::Arena* arena) const {
  grSim_Packet* n = new grSim_Packet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void grSim_Packet::Clear() {
// @@protoc_insertion_point(message_clear_start:grSim_Packet)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_commands()) {
      GOOGLE_DCHECK(commands_ != NULL);
      commands_->::grSim_Commands::Clear();
    }
    if (has_replacement()) {
      GOOGLE_DCHECK(replacement_ != NULL);
      replacement_->::grSim_Replacement::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool grSim_Packet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grSim_Packet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .grSim_Commands commands = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_commands()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .grSim_Replacement replacement = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_replacement()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grSim_Packet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grSim_Packet)
  return false;
#undef DO_
}

void grSim_Packet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grSim_Packet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .grSim_Commands commands = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->commands_, output);
  }

  // optional .grSim_Replacement replacement = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->replacement_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grSim_Packet)
}

::google::protobuf::uint8* grSim_Packet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grSim_Packet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .grSim_Commands commands = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->commands_, deterministic, target);
  }

  // optional .grSim_Replacement replacement = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->replacement_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grSim_Packet)
  return target;
}

size_t grSim_Packet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grSim_Packet)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .grSim_Commands commands = 1;
    if (has_commands()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->commands_);
    }

    // optional .grSim_Replacement replacement = 2;
    if (has_replacement()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->replacement_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void grSim_Packet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grSim_Packet)
  GOOGLE_DCHECK_NE(&from, this);
  const grSim_Packet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const grSim_Packet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grSim_Packet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grSim_Packet)
    MergeFrom(*source);
  }
}

void grSim_Packet::MergeFrom(const grSim_Packet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grSim_Packet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_commands()->::grSim_Commands::MergeFrom(from.commands());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_replacement()->::grSim_Replacement::MergeFrom(from.replacement());
    }
  }
}

void grSim_Packet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grSim_Packet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void grSim_Packet::CopyFrom(const grSim_Packet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grSim_Packet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool grSim_Packet::IsInitialized() const {
  if (has_commands()) {
    if (!this->commands_->IsInitialized()) return false;
  }
  if (has_replacement()) {
    if (!this->replacement_->IsInitialized()) return false;
  }
  return true;
}

void grSim_Packet::Swap(grSim_Packet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void grSim_Packet::InternalSwap(grSim_Packet* other) {
  std::swap(commands_, other->commands_);
  std::swap(replacement_, other->replacement_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata grSim_Packet::GetMetadata() const {
  protobuf_grSim_5fPacket_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_grSim_5fPacket_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// grSim_Packet

// optional .grSim_Commands commands = 1;
bool grSim_Packet::has_commands() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void grSim_Packet::set_has_commands() {
  _has_bits_[0] |= 0x00000001u;
}
void grSim_Packet::clear_has_commands() {
  _has_bits_[0] &= ~0x00000001u;
}
void grSim_Packet::clear_commands() {
  if (commands_ != NULL) commands_->::grSim_Commands::Clear();
  clear_has_commands();
}
const ::grSim_Commands& grSim_Packet::commands() const {
  // @@protoc_insertion_point(field_get:grSim_Packet.commands)
  return commands_ != NULL ? *commands_
                         : *::grSim_Commands::internal_default_instance();
}
::grSim_Commands* grSim_Packet::mutable_commands() {
  set_has_commands();
  if (commands_ == NULL) {
    commands_ = new ::grSim_Commands;
  }
  // @@protoc_insertion_point(field_mutable:grSim_Packet.commands)
  return commands_;
}
::grSim_Commands* grSim_Packet::release_commands() {
  // @@protoc_insertion_point(field_release:grSim_Packet.commands)
  clear_has_commands();
  ::grSim_Commands* temp = commands_;
  commands_ = NULL;
  return temp;
}
void grSim_Packet::set_allocated_commands(::grSim_Commands* commands) {
  delete commands_;
  commands_ = commands;
  if (commands) {
    set_has_commands();
  } else {
    clear_has_commands();
  }
  // @@protoc_insertion_point(field_set_allocated:grSim_Packet.commands)
}

// optional .grSim_Replacement replacement = 2;
bool grSim_Packet::has_replacement() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void grSim_Packet::set_has_replacement() {
  _has_bits_[0] |= 0x00000002u;
}
void grSim_Packet::clear_has_replacement() {
  _has_bits_[0] &= ~0x00000002u;
}
void grSim_Packet::clear_replacement() {
  if (replacement_ != NULL) replacement_->::grSim_Replacement::Clear();
  clear_has_replacement();
}
const ::grSim_Replacement& grSim_Packet::replacement() const {
  // @@protoc_insertion_point(field_get:grSim_Packet.replacement)
  return replacement_ != NULL ? *replacement_
                         : *::grSim_Replacement::internal_default_instance();
}
::grSim_Replacement* grSim_Packet::mutable_replacement() {
  set_has_replacement();
  if (replacement_ == NULL) {
    replacement_ = new ::grSim_Replacement;
  }
  // @@protoc_insertion_point(field_mutable:grSim_Packet.replacement)
  return replacement_;
}
::grSim_Replacement* grSim_Packet::release_replacement() {
  // @@protoc_insertion_point(field_release:grSim_Packet.replacement)
  clear_has_replacement();
  ::grSim_Replacement* temp = replacement_;
  replacement_ = NULL;
  return temp;
}
void grSim_Packet::set_allocated_replacement(::grSim_Replacement* replacement) {
  delete replacement_;
  replacement_ = replacement;
  if (replacement) {
    set_has_replacement();
  } else {
    clear_has_replacement();
  }
  // @@protoc_insertion_point(field_set_allocated:grSim_Packet.replacement)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
